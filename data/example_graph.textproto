# proto:program_graph.proto

# A program is modelled as a graph.
#
# def fib(n):
#   if n < 2:
#     return n
#   return fib(n-1) + fib(n-2)
#
# my_error = "Oh no! Over 1000."
#
# def do_fib(n):
#   if n >= 1000:
#     return my_error
#   return fib(n)
#

symbol: {
    name: "fib"
    kind: SYMBOL
    u_edge: "fib"
}

symbol: {
    name: "my_error"
    kind: SYMBOL
}

symbol: {
    name: "do_fib"
    kind: SYMBOL
    u_edge: "my_error" 
    u_edge: "fib" 
}